.container {
  max-width: 500px;
  border-radius: 10px;
  padding: 40px;
  display: flex;
  flex-direction: column;
  gap: 20px;
  background: var(--color-bg-form);

  @media (max-width: 600px) {
    border-radius: 0;
    width: 100vw;
    box-sizing: border-box;
    padding: 1rem;
    max-width: 100vw;
  }
}


.form {
  display: flex;
  flex-direction: column;
  gap: 20px;

}

.row {
  display: flex;
  gap: 0;

  @media (max-width: 600px) {
    flex-direction: column;
  }
}

.row .fieldGroup {
  flex: 1 1 0;
  display: flex;
  flex-direction: column;
}

/* Remove border-radius where the two inputs touch */
.row .fieldGroup:first-child input {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;


  @media (max-width: 600px) {
    border-radius: 8px;
  }
}

.row .fieldGroup:last-child input {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;

  @media (max-width: 600px) {
    border-radius: 8px;
  }
}

.fieldGroup {
  display: flex;
  flex-direction: column;
  width: 100%;
}

.input {
  transition: padding 0.2s;

  &:focus,
  &:not(:placeholder-shown) {
    padding-top: 28px;
    padding-bottom: 8px;
    line-height: 1.2;
  }
}

.label {
  margin-bottom: 10px;
  font-size: 14px;
}

.errorMessage {
  padding: 5px 0 0 5px;
  font-size: 12px;
  color: var(--color-field-error);
}

.privacyText {
  font-size: 14px;
  line-height: 20px;
  color: var(--color-placeholder);
  margin: 0;
}

.privacyLink {
  color: var(--color-input-border-active);
  text-decoration: underline;
}

.button {
  box-shadow: 0px 4px 4px 0px var(--color-button-shadow);
  border-radius: 8px;
  padding: 10px 20px;
  background: var(--color-input-border-active);
  color: var(--color-secondary-white);
  font-size: 16px;
  border: none;
  cursor: pointer;
  width: auto;
  align-self: flex-start;
}

.textarea {
  resize: none;
}

.successMessage {
  color: var(--color-input-border-active);
  margin-top: 1rem;
  font-size: 14px;
  line-height: 1.5;
}


.submitErrorMessage {
  color: var(--color-field-error);
  margin-top: 1rem;
  font-size: 14px;
  line-height: 1.5;
}

.inputLabel {
  position: absolute;
  top: 10px;
  left: 18px;
  font-size: 12px;
  color: var(--color-placeholder);
  opacity: 0;
  transition: opacity 0.2s;
}

.fieldGroup:focus-within .inputLabel,
.fieldGroup:has(input:not(:placeholder-shown)) .inputLabel {
  opacity: 1;
  /* Keep the original color as defined in .inputLabel */
}